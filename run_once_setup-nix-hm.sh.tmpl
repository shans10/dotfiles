#!/usr/bin/env bash

# Source utils
UTILS_DIR={{ joinPath .chezmoi.sourceDir "scripts/utils" }}
source "$UTILS_DIR/string-formatter"    # string formatters to add colors and bling
source "$UTILS_DIR/confirmation-prompt" # yes/no confirmation prompt

# Display script header
printf "\n"
ohai " " "${tty_yellow}############### INSTALLING NIX AND HOME-MANAGER ###############"
printf "\n"

# Exit script if home-manager is already installed
if [[ -x "$(command -v home-manager)" ]]; then
  printf "Nix and home-manager already installed. Exiting...\n"
  exit
fi

# Add confirmation prompt to continue/exit script based on user response
prompt

# Install nix package manager using Determinate Systems installer
ohai 'Installing `nix` package manager...'
if [[ ! -x "$(command -v nix)" ]]; then
  curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install
  # Load nix env in current shell
  printf "\n--> Loading nix env in current shell...\n"
  . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
else
  printf "Already installed. Continuing other configurations...\n"
fi
printf "\n"

# Add appropriate channels
ohai "Setting up nix channels..."
printf '\n--> Adding `nixpkgs` channel...\n'
nix-channel --add https://nixos.org/channels/nixos-unstable nixpkgs
printf '\n--> Adding `home-manager` channel...\n'
nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
printf "\n--> Updating channels...\n"
nix-channel --update
printf "\n"

# Install home-manager
ohai 'Installing `home-manager`...'
nix-shell '<home-manager>' -A install

# Configure shell profile for home-manager
if [[ ! -f "$HOME/.profile" ] || [ ! "$(cat $HOME/.profile | grep hm-session-vars)" ]]
then
  printf "\n--> Configuring shell for home-manager...\n"
  echo -e "\n# Source home-manager session vars" >> $HOME/.profile
  echo '. "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"' >> $HOME/.profile
fi

# Signal end
printf "\n${tty_green}DONE!\n"
